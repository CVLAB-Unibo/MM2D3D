# model hyperparams

models:
  - name: 2d_net
    args:
      pretrained: true
      num_classes: 6
      frozen_batch_norm: false
    optimizer:
      name: adamw
      lr: 0.001
    artifacts:
      script_model: false
    lr_scheduler:
      name: one_cycle
      max_lr: 0.005
      total_steps: 49047

  - name: 3d_net
    args:
      num_classes: 6
      backbone_3d_kwargs:
        in_channels: 3
        m: 16
        block_reps: 1
        residual_blocks: false
        full_scale: 4096
        num_planes: 7
    optimizer:
      name: adamw
      lr: 0.001
    artifacts:
      script_model: false
    lr_scheduler:
      name: one_cycle
      max_lr: 0.005
      total_steps:  49047

losses:
  - name: cross_entropy
    weight: 1.0
    target: segmentation
    args:
      weight: [1.9241476, 1., 2.16763851, 2.78254323, 1.54875664, 1.85686537]

logging:
  # to log on mlflow
  # mlflow:
  #   run_name: rgbd_rgbxyz_sigmoid_for_rgb
  #   experiment_name: lidarseg_usa_singapore
  #   note: |
  #     baseline
  #   tags:
  #     model_name: train
  # to log on wandb (by default it inherits some parameters from mlflow)
  wandb:
    run_name: rgbd_rgbxyz_sigmoid_for_rgb
    project: lidarseg_usa_singapore
    tags: [train]

metrics:
  ckpt_monitor_2d: val/target/iou
  mode_monitor: max
  ckpt_monitor_3d: val/target/iou_3d
  ckpt_monitor_avg: val/target/iou_avg

defaults:
- _self_
- datasets: nuscenes_usa_singapore
- run: train

# hydra specific config

hydra:
  output_subdir: null
  run:
    dir: .

train:
  short_run: false
  reduce_factor: 1
  # which of the following params
  # must be logged
  to_log:
    - class_names

  # params regarding the training
  # procedure itself
  params:
    class_names:
    - vehicle
    - driveable_surface
    - sidewalk
    - terrain
    - manmade
    - vegetation
    class_palette:
    - [255, 158, 0]
    - [0, 207, 191]
    - [75, 0, 75]
    - [112, 180, 60]
    - [222, 184, 135]
    - [0, 175, 0]
    val_log_images_step: 50
    lambda_xm_src: 1
    lambda_xm_trg: 0.1
